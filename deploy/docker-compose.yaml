version: '3'
services:
  sitedb:
    container_name: site-database
    env_file:
      - ../.env
    image: postgres:12
    ports:
      - 5432:5432
    restart: unless-stopped
    volumes:
      - /usr/site/data/pgdata:/var/lib/postgresql/data/pgdata
    networks:
      - default

  redis:
    env_file:
      - ../.env
    image: redis:latest
    restart: "no"
    container_name: redis-site
    ports:
      - 6379:6379
    volumes:
      - /usr/site/conf/redis.conf:/etc/redis/redis.conf
      - /usr/site/data/redis:/data
    command: redis-server /etc/redis/redis.conf --requirepass werido
    privileged: true
    networks:
      - default


  siteoldbackend:
    # container_name: old-site-backend
    image: python:3.9
    env_file:
      - ../.env
    working_dir: /app
    command:       
      - /bin/bash
      - -c
      - |
        mkdir /root/.pip/
        cp pip.conf /root/.pip/pip.conf
        pip install -r requirements.txt  --default-timeout=1000
        supervisord  -c celery.conf
        python manage.py makemigrations
        python manage.py migrate
        gunicorn -c gunicorn.py core.asgi:application
    volumes:
      - ../oldbackend/:/app
    # ports:
    #   - 8000:8000
    #   - 9001:9001
    depends_on:
      - sitedb
      - redis
      - etcd
    scale: 2
    networks:
      - default

  usercenter:
    env_file:
      - ../.env  
    image: golang:latest
    container_name: user-center
    working_dir: /app
    command:       
      - /bin/bash
      - -c
      - |
        echo 'start server...'
        go mod tidy
        go install github.com/cortesi/modd/cmd/modd@latest
        modd -f modd.conf
    volumes:
      - ../usercenter:/app
    ports:
      - "8080:8080"
    environment:
      - GO111MODULE=on
      - GOPROXY=https://goproxy.cn/,direct
    networks:
      - default
    depends_on:
      - etcd
      - sitedb
      - redis 

  front:
    env_file:
      - ../.env  
    container_name: site-nginx
    image: nginx
    ports:
    - 80:80
    - 443:443
    restart: unless-stopped
    volumes:
    - ../dist/front/:/usr/share/nginx/html/
    - ../gateway/nginx/conf.d/:/etc/nginx/conf.d/ 
    - ../gateway/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
    - ../gateway/confd/:/etc/confd/
    - /usr/site/logs/nginx/:/var/log/nginx/
    - /etc/ssl/:/etc/ssl/
    command:       
      - /bin/bash
      - -c
      - |
        /usr/sbin/service nginx start
        echo 'install confd...'
        /etc/confd/bin/confd -watch -backend etcdv3  -confdir  /etc/confd/  -node=http://etcd:2379 -log-level debug
    depends_on: 
      # - usercenter
      - siteoldbackend
    networks:
      - default

  etcd:
    container_name: site-etcd
    hostname: etcd
    image: bitnami/etcd:latest
    deploy:
      replicas: 1
      # restart_policy:
      #   condition: on-failure
    privileged: true
    # volumes:
    #   - "/etcd/data:/opt/bitnami/etcd/data"
    environment:
      - "ETCD_ADVERTISE_CLIENT_URLS=http://0.0.0.0:2379"
      - "ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379"
      - "ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380"
      - "ETCD_INITIAL_ADVERTISE_PEER_URLS=http://0.0.0.0:2380"
      - "ALLOW_NONE_AUTHENTICATION=yes"
      - "ETCD_INITIAL_CLUSTER=node1=http://0.0.0.0:2380"
      - "ETCD_NAME=node1"
      - "ETCD_DATA_DIR=/opt/bitnami/etcd/data"
    ports:
      - 2379:2379
      - 2380:2380
    networks:
      - default

networks:
  default:
    name: kong-net
    external: true
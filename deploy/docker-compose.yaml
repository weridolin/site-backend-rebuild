version: '3'

services:

  sitedb:
    container_name: site-database
    environment:
      - PGDATA
      - POSTGRES_DB
      - POSTGRES_PASSWORD
      - POSTGRES_USER
    image: postgres:12
    ports:
      - 5432:5432
    restart: unless-stopped
    volumes:
      - /usr/site/data/pgdata:/var/lib/postgresql/data/pgdata

  redis:
    image: redis:latest
    restart: "no"
    container_name: redis-site
    environment:
      - REDIS_PASSWORD
    ports:
      - 6379:6379
    volumes:
      - /usr/site/conf/redis.conf:/etc/redis/redis.conf
      - /usr/site/data/redis:/data
    command: redis-server /etc/redis/redis.conf --requirepass werido
    privileged: true


  siteoldbackend:
    container_name: old-site-backend
    environment:
      - POSTGRES_HOST
      - POSTGRES_PORT
      - REDIS_PASSWORD
      - REDIS_HOST
      - REDIS_PORT
      - EMAIL_PWD
    working_dir: /app
    build: 
      context: ../oldbackned/
      dockerfile: Dockerfile
    command:       
      - /bin/bash
      - -c
      - |
        cp pip.conf /root/.pip/pip.conf
        pip install -r requirements.txt
        supervisord  -c celery.conf
        python manage.py makemigrations
        python manage.py migrate
        gunicorn -c gunicorn.py core.asgi:application
    volumes:
      - ../oldbackned/:/app
    ports:
      - 8000:8000
      - 465:465
      - 25:25
      - 9001:9001
    depends_on:
      - sitedb
      - redis

  usercenter:
    image: golang:latest
    container_name: user-center
    working_dir: /app
    command:       
      - /bin/bash
      - -c
      - |
        echo 'start server...'
        go mod tidy
        go run  ./services/users/cmd/rest/users.go -f ./services/users/cmd/rest/etc/users.yaml
    volumes:
      - ../usercenter/:/app
    ports:
      - "8080:8080"
    environment:
      - GO111MODULE=on
      - GOPROXY=https://goproxy.cn/,direct
    networks:
      - default    

  front:
    container_name: site-nginx
    image: nginx
    ports:
    - 80:80
    - 443:443
    restart: unless-stopped
    volumes:
    # - /pythons/site-new/dist:/usr/share/nginx/html/
    - ../gateway/nginx/conf.d/:/etc/nginx/conf.d/ 
    - ../gateway/conf/nginx.conf:/etc/nginx/nginx.conf
    - /usr/site/logs/nginx/:/var/log/nginx/
    - /etc/ssl/:/etc/ssl/
    depends_on: 
    # - django todo
      - usercenter
      - siteoldbackend
    networks:
      - default


networks:
  default:
    name: kong-net
    external: true
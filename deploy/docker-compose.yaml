version: '3'
services:

  siteoldbackend:
    # container_name: old-site-backend
    image: python:3.9
    env_file:
      - ../.env
    working_dir: /app
    command:       
      - /bin/bash
      - -c
      - |
        mkdir /root/.pip/
        cp pip.conf /root/.pip/pip.conf
        pip install -r requirements.txt  --default-timeout=1000
        supervisord  -c celery.conf
        python manage.py makemigrations
        python manage.py migrate
        gunicorn -c gunicorn.py core.asgi:application
    volumes:
      - ../oldbackend/:/app
    ports:
      - 8000:8000
    networks:
      - site

  usercenter:
    env_file:
      - ../.env  
    image: golang:1.18
    container_name: user-center
    working_dir: /app
    command:       
      - /bin/bash
      - -c
      - |
        echo 'start server...'
        go mod tidy
        go install github.com/cortesi/modd/cmd/modd@latest
        modd -f modd.conf
    volumes:
      - ../usercenter:/app
    ports:
      - "8080:8080"
    environment:
      - GO111MODULE=on
      - GOPROXY=https://goproxy.cn/,direct
    networks:
      - site
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  front:
    env_file:
      - ../.env  
    container_name: site-nginx
    image: nginx:1.24.0
    # image: opentracing/nginx-opentracing:latest
    ports:
    - 80:80
    - 443:443
    restart: unless-stopped
    volumes:
    - ../front/dist/:/usr/share/nginx/html/
    - ../gateway/nginx/conf.d/:/etc/nginx/conf.d/ 
    - ../gateway/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
    - ../gateway/confd/:/etc/confd/
    - /usr/site/logs/nginx/:/var/log/nginx/
    - /etc/ssl/:/etc/ssl/
    - ../gateway/nginx/lib/:/nginx/lib/
    command:       
      - /bin/bash
      - -c
      - |
        /usr/sbin/service nginx start
        echo 'install confd...'
        /etc/confd/bin/confd -watch -backend etcdv3  -confdir  /etc/confd/  -node=http://etcd1:2379 -node=http://etcd2:2379 -node=http://etcd3:2379 -log-level debug
    # depends_on: 
    #   - usercenter
    #   - siteoldbackend
    #   - alinlabWebhook
    networks:
      - site

  alinlabWebhook:
    env_file:
      - ../.env  
    image: golang:1.18
    container_name: alinlab-Webhook
    working_dir: /app
    # scale: 2 
    command:       
      - /bin/bash
      - -c
      - |
        echo 'start server...'
        go mod tidy
        go install github.com/cortesi/modd/cmd/modd@latest
        modd -f modd.conf
    volumes:
      - ../alinlab-webhook:/app
    # ports:
    #   - "14001:14001"
    environment:
      - GO111MODULE=on
      - GOPROXY=https://goproxy.cn/,direct
    networks:
      - site   
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

networks:
  # default:
  #   name: kong-net
  #   external: true
  site:
    # name: site-net
    # driver: bridge
    external: true
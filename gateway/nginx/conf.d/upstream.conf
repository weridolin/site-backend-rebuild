# 需要鉴权




# 不需要鉴权




server {



    # 监听 https 服务
    listen 443 ssl;
    # listen 80;
    server_name www.weridolin.cn;
    # server_name_in_redirect off;

    # 路径
    access_log /var/log/nginx/https.www.weridolin.cn.access.log  ;
    error_log /var/log/nginx/https.www.weridolin.cn.error.log  ;

    # 编码
    charset "utf-8";

    # # ssl证书地址
    ssl_certificate     /etc/ssl/certs/www.weridolin.cn.pem;  # pem文件的路径
    ssl_certificate_key  /etc/ssl/private/www.weridolin.cn.key; # key文件的路径

    # # ssl验证相关配置
    ssl_session_timeout  5m;    #缓存有效期
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;    #加密算法
    ssl_protocols TLSv1.1 TLSv1.2;    #安全链接可选的加密协议
    ssl_prefer_server_ciphers on;   #使用服务器端的首选算法

    # index  / 页面地址 要跟前端打包后的映射地址一致
    index index.html;
    root /usr/share/nginx/html/;

    # 400 500 页面
    #error_page  404 /404.html;    
    #error_page  500 /500.html;
    # error_page  401 /401.html;

    # 如果是以短重定向到正常链接
    if ($http_host ~ "^t.weridolin.cn") {
        rewrite ^(.*)  http://www.weridolin.cn/shortUrl/api/v1/$1 permanent;
    }

    location / {
        try_files $uri $uri/ =404;
    }

    ######### 旧的都写在一起了，所以这里用一个转发,后续加新的可以单独独立出来

    ## 需要验证的url
    
    


    ## 不需要鉴权的url
    
    


    # location /admin {
    #     auth_request /auth;
    #     auth_request_set $user $upstream_http_x_forwarded_user;
    #     proxy_set_header X-User $user; # 可以传递Header
    #     add_header Set-Cookie $user; # 可以传递Cookie
    #     proxy_pass http://servers:8080;
    # }


    ## 用户鉴权
    location /token {
        internal; # 只允许内部调用，外部调用报404
        proxy_pass http://usercenter/token/validate;
        proxy_pass_request_body off; # 不向上游发送包体
        proxy_set_header Content-Length ""; # 同上，看情况加或不加
    #    proxy_set_header Content-Type "text/html; charset=utf-8"; # mutilpart/form-data会报错，所以改成text/html
        proxy_set_header X-Original-Request-URI $request_uri; # 传递真实请求路径
        proxy_set_header X-Original-URI $uri; # 传递真实访问者地址
        proxy_set_header X-Original-Remote-Addr $remote_addr; # 传递真实访问者地址
        proxy_set_header X-Original-Host $host; # 传递真实请求地址
        proxy_set_header X-Original-Method $request_method; # 传递真实请求方法

    }

    #location /static/ {
    #    root /home/webserver/web/WebServer/;
    #}
}

#http转发到https

server {
    listen 80;
    

    #填写绑定证书的域名
    server_name 127.0.0.1;
    # server_name www.weridolin.cn;


    # 路径
    access_log /var/log/nginx/http.www.weridolin.cn.access.log ;
    error_log /var/log/nginx/http.www.weridolin.cn.error.log ;
    
    #（第一种）把http的域名请求转成https
    return 307 https://$host$request_uri;
    
    #（第二种）强制将http的URL重写成https
    # rewrite ^(.*) https://$server_name$1 permanent; 
}

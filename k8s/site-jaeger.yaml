apiVersion: apps/v1	#与k8s集群版本有关，使用 kubectl api-versions 即可查看当前集群支持的版本
kind: StatefulSet 	#该配置的类型，我们使用的是 Deployment
metadata:	        #译名为元数据，即 Deployment 的一些基本属性和信息
  name: site-jaeger-deployment	#Deployment 的名称
  labels:	    #标签，可以灵活定位一个或多个资源，其中key和value均可自定义，可以定义多组，目前不需要理解
    app: jaeger	#为该Deployment设置key为app，value为nginx的标签
spec:	        #这是关于该Deployment的描述，可以理解为你期待该Deployment在k8s中如何使用
  replicas: 1	#使用该Deployment创建两个应用程序实例
  selector:	    #标签选择器，与上面的标签共同作用，目前不需要理解
    matchLabels: #选择包含标签app:nginx的资源即为下面template的模板中包含 app:nginx的模板
      app: jaeger
  template:	    #这是选择或创建的Pod的模板
    metadata:	#Pod的元数据
      labels:	#Pod的标签，上面的selector即选择包含标签app:nginx的Pod
        app: jaeger
    spec:	    #期望Pod实现的功能（即在pod中部署）
      containers:	#生成container，与docker中的container是同一种      - "16686:16686"
      - name: jaeger-all-one	#container的名称
        image:  jaegertracing/all-in-one:latest #创建container，该container默认80端口可访问
        ports:
        - containerPort: 16686
          name: dashboard
        - containerPort: 4317
          name: client
        - containerPort: 14250
          name: collector-grpc        
        env:
          # Define the environment variable      - LOG_LEVEL=debug
      # - SPAN_STORAGE_TYPE=elasticsearch
      # - ES_SERVER_URLS=http://elasticsearch:9200
          - name: COLLECTOR_OTLP_ENABLED
            value: "true"
          - name: LOG_LEVEL
            value: debug
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger
  labels:
    app: jaeger
spec:
  externalTrafficPolicy: Local
  selector:
    app: jaeger
  ports:
    - name: jaeger-collector-http 
      port: 4317
      targetPort: 4317
      nodePort: 31002 # 可以通过所在node的IP来访问
    - name: jaeger-collector-grpc 
      port: 14250
      targetPort: 14250
      nodePort: 31001 # 可以通过所在node的IP来访问
    - name: jaeger-srv-dashboard
      port: 16686
      targetPort: 16686
      nodePort: 31000 # 可以通过所在node的IP来访问
  type: NodePort
